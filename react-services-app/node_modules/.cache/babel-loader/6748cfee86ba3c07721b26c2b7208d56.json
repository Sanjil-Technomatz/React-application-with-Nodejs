{"ast":null,"code":"var _jsxFileName = \"/home/developer/react-services-app/src/ServiceUser.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useLocation } from \"react-router\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ServiceUser() {\n  _s();\n\n  const location = useLocation();\n  const temp = JSON.parse(localStorage.getItem(location.state.service));\n  const temp2 = temp.filter((object, index) => {\n    return object.id === location.state.id;\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: JSON.stringify(temp2)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 10\n  }, this);\n}\n\n_s(ServiceUser, \"pkHmaVRPskBaU4tMJuJJpV42k1I=\", false, function () {\n  return [useLocation];\n});\n\n_c = ServiceUser;\n\nvar _c;\n\n$RefreshReg$(_c, \"ServiceUser\");","map":{"version":3,"names":["React","useLocation","ServiceUser","location","temp","JSON","parse","localStorage","getItem","state","service","temp2","filter","object","index","id","stringify"],"sources":["/home/developer/react-services-app/src/ServiceUser.js"],"sourcesContent":["import React from \"react\";\nimport { useLocation } from \"react-router\";\n\nexport default function ServiceUser() {\n  const location = useLocation();\n\n  const temp = JSON.parse(localStorage.getItem(location.state.service));\n\n  const temp2 = temp.filter((object, index) => {\n    return object.id === location.state.id;\n  });\n\n  return <div>{JSON.stringify(temp2)}</div>;\n}\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,cAA5B;;AAEA,eAAe,SAASC,WAAT,GAAuB;EAAA;;EACpC,MAAMC,QAAQ,GAAGF,WAAW,EAA5B;EAEA,MAAMG,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqBL,QAAQ,CAACM,KAAT,CAAeC,OAApC,CAAX,CAAb;EAEA,MAAMC,KAAK,GAAGP,IAAI,CAACQ,MAAL,CAAY,CAACC,MAAD,EAASC,KAAT,KAAmB;IAC3C,OAAOD,MAAM,CAACE,EAAP,KAAcZ,QAAQ,CAACM,KAAT,CAAeM,EAApC;EACD,CAFa,CAAd;EAIA,oBAAO;IAAA,UAAMV,IAAI,CAACW,SAAL,CAAeL,KAAf;EAAN;IAAA;IAAA;IAAA;EAAA,QAAP;AACD;;GAVuBT,W;UACLD,W;;;KADKC,W"},"metadata":{},"sourceType":"module"}